{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","React","showHTMLEditor","setShowHTMLEditor","showCSSEditor","setShowCSSEditor","showJSEditor","setShowJSEditor","timeout","setTimeout","clearTimeout","classname","type","onClick","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAUe,SAASA,EAAOC,GAAQ,IAEnCC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAQF,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,gBACZH,GAEH,kBAAC,aAAD,CACEI,eAVN,SAAsBC,EAAQC,EAAML,GAClCC,EAASD,IAULA,MAAOA,EACPE,UAAU,sBACVI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMX,EACNY,MAAO,WACPC,aAAa,MCjCR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/BG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAV8C,mBAGlDd,EAHkD,KAG3CsB,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQT,EAAaK,KAAKK,UAAUzB,MAChD,CAACe,EAAaf,IAEV,CAACA,EAAOsB,GCyEFI,MA3Ff,WAAgB,IAAD,EACWd,EAAgB,OAAQ,IADnC,mBACNe,EADM,KACAC,EADA,OAEShB,EAAgB,MAAO,IAFhC,mBAENiB,EAFM,KAEDC,EAFC,OAGOlB,EAAgB,KAAM,IAH7B,mBAGNmB,EAHM,KAGFC,EAHE,OAIehB,mBAAS,IAJxB,mBAINiB,EAJM,KAIEC,EAJF,OAQ6BC,IAAMnB,UAAS,GAR5C,mBAQPoB,EARO,KAQQC,EARR,OAS2BF,IAAMnB,UAAS,GAT1C,mBASPsB,EATO,KASOC,EATP,OAUyBJ,IAAMnB,UAAS,GAVxC,mBAUPwB,EAVO,KAUMC,EAVN,KA2Cb,OAdAlB,qBAAU,WACR,IAAMmB,EAAUC,YAAW,WACzBT,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMa,aAAaF,MACzB,CAACf,EAAME,EAAKE,IAGb,oCAGE,yBAAK7B,UAAU,iBACb,yBAAK2C,UAAU,iBACf,2BAAOC,KAAK,SAAS9C,MAAM,aAAa+C,QArC1B,WAClBV,GAAmBD,GAClBE,GAAkBC,GAAkBD,GACpCE,GAAiBC,GAAiBD,MAmC/B,2BAAOM,KAAK,SAAS9C,MAAM,YAAY+C,QAjC1B,WACjBR,GAAkBD,GACjBE,GAAiBC,GAAiBD,GAClCJ,GAAmBC,GAAmBD,MA+BnC,2BAAOU,KAAK,SAAS9C,MAAM,WAAW+C,QA7B1B,WAChBN,GAAiBD,GAChBF,GAAkBC,GAAkBD,GACpCF,GAAmBC,GAAmBD,OA6BnCA,GAAkB,kBAACxC,EAAD,CAChBE,SAAS,MACTC,YAAY,aACZC,MAAO2B,EACP1B,SAAU2B,IAGXU,GAAiB,kBAAC1C,EAAD,CAChBE,SAAS,MACTC,YAAY,YACZC,MAAO6B,EACP5B,SAAU6B,IAGXU,GAAgB,kBAAC5C,EAAD,CACfE,SAAS,aACTC,YAAY,WACZC,MAAO+B,EACP9B,SAAU+B,KAKd,yBAAK9B,UAAU,QACb,4BACE+B,OAAQA,EACRe,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCnFjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3659a94e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className=\"editor-container\">\n      <div className=\"editor-title\">\n        {displayName}\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      />\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n\n// State to manage file system\n  const[showHTMLEditor,setShowHTMLEditor] = React.useState(true);\n  const[showCSSEditor,setShowCSSEditor] = React.useState(false);\n  const[showJSEditor,setShowJSEditor] = React.useState(false);\n\n  const onClickHTML = () => {\n    setShowHTMLEditor(!showHTMLEditor);\n    (showCSSEditor) && setShowCSSEditor(!showCSSEditor) ; \n    (showJSEditor) && setShowJSEditor(!showJSEditor) ;\n  }\n  const onClickCSS = () => {\n    setShowCSSEditor(!showCSSEditor);\n    (showJSEditor) && setShowJSEditor(!showJSEditor);\n    (showHTMLEditor) && setShowHTMLEditor(!showHTMLEditor);\n  }\n  const onClickJS = () => {\n    setShowJSEditor(!showJSEditor);\n    (showCSSEditor) && setShowCSSEditor(!showCSSEditor) ; \n    (showHTMLEditor) && setShowHTMLEditor(!showHTMLEditor);\n  }\n\n  // Save File on localStorage every few seconds\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n    \n      {/*Editor Section and File Explorer */}\n      <div className=\"pane top-pane\">\n        <div classname=\"file-explorer\"> \n        <input type=\"submit\" value=\"Index.html\" onClick={onClickHTML} />\n        <input type=\"submit\" value=\"Index.css\" onClick={onClickCSS} />\n        <input type=\"submit\" value=\"Index.JS\" onClick={onClickJS} />\n        </div>\n       {/* Html Editor */}\n       {showHTMLEditor && <Editor\n          language=\"xml\"\n          displayName=\"index.html\"\n          value={html}\n          onChange={setHtml}\n        />}\n        {/* CSS Editor */}\n        {showCSSEditor && <Editor\n          language=\"css\"\n          displayName=\"index.css\"\n          value={css}\n          onChange={setCss}\n        />}\n        {/* JS Editor */}\n        {showJSEditor && <Editor\n          language=\"javascript\"\n          displayName=\"index.js\"\n          value={js}\n          onChange={setJs}\n        />}\n      </div>\n\n      {/* Live View Section */}\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}